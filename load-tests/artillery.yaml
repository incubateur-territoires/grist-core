config:
  target: http://localhost:8484
  processor: './functions.js'
  http:
    defaults:
      headers:
        Authorization: "Bearer {{token}}"

  phases:
  - duration: 60
    arrivalRate: 1
    rampTo: 3
    name: Warm up phase
  - duration: 60
    arrivalRate: 3
    rampTo: 5
    name: Ramp up load
  - duration: 30
    arrivalRate: 5
    # rampTo: 100
    name: Spike phase

  # Load & configure a couple of useful plugins
  # https://docs.art/reference/extensions
  plugins:
    ensure: {}
    expect: {}
    apdex: {}
    metrics-by-endpoint: {}
    fake-data: {}
  variables:
    runId: "{{$testRunId}}"
before:
  flow:
    - log: "Creating the workspace"
    - post:
        url: "/api/orgs/docs/workspaces"
        beforeRequest: "forgeWorkspaceName"
        capture:
          - regexp: ".*"
            as: workspaceId
    - log: "Workspace {{ workspaceName }} created"
    - log: "Creating documents"
    - log: "Creating doc for scenario1"
    - post:
        url: "/api/workspaces/{{workspaceId}}/docs"
        expect:
          - statusCode: 200
        json:
          name: "scenario1"
        capture:
          - regexp: '"(?<id>.*)"'
            group: id
            as: scenario1DocId
    - log: "Creating doc for scenario2"
    - post:
        url: "/api/workspaces/{{workspaceId}}/docs"
        expect:
          - statusCode: 200
        json:
          name: "scenario2-formulas"
        capture:
          - regexp: '"(?<id>.*)"'
            group: id
            as: scenario2DocId
    - log: "Putting data for scenario2"
    - put:
        url: "/api/docs/{{scenario2DocId}}/tables/Table1/columns?replaceall=1"
        expect:
          - statusCode: 200
        beforeRequest: "forgeScenario2ColumnsBody"
    - log: "Import heavy documents"
    - function: importDocumentForScenario3
    - function: importDocumentForScenario5

    - log: "Add aggregation to scenario 5"
    # This wodoo stuff counts each occurrence for every letters in column19:
    - post:
        url: "/api/docs/{{scenario5DocId}}/apply"
        json: [["CreateViewSection",1,0,"record",[24],null]]
        expect:
          - statusCode: 200
    - log: "DONE creating documents"
    # - get:
    #     url: "/api/profile/apiKey"
    #     capture:
    #       regexp: .*
    #       as: "bearer"
after:
  flow:
    - log: "check out results in {{workspaceName}}"
scenarios:
  - name: "Scenario 1: Post as many rows as possible"
    engine: http
    flow:
      - loop:
        - post:
            url: "/api/docs/{{scenario1DocId}}/tables/Table1/records"
            json:
              records:
                - fields:
                    A: "{{$randWord()}}"
                    B: "{{$randNumber()}}"
            expect:
              - statusCode: 200
        - think: 5
        count: 30
  - name: "Scenario 2: Post as many rows as possible with formulas"
    engine: http
    flow:
      - loop:
        - post:
            url: "/api/docs/{{scenario2DocId}}/tables/Table1/records"
            json:
              records:
                - fields:
                    column0: "{{$randPhrase()}}"
                    column1: "{{$randPhrase()}}"
                    column2: "{{$randPhrase()}}"
                    column3: "{{$randPhrase()}}"
                    column4: "{{$randPhrase()}}"
                    column5: "{{$randPhrase()}}"
                    column6: "{{$randPhrase()}}"
                    column7: "{{$randPhrase()}}"
                    column8: "{{$randPhrase()}}"
                    column9: "{{$randPhrase()}}"
                    column10: "{{$randPhrase()}}"
                    column11: "{{$randPhrase()}}"
                    column12: "{{$randPhrase()}}"
                    column13: "{{$randPhrase()}}"
                    column14: "{{$randPhrase()}}"
                    column15: "{{$randPhrase()}}"
                    column16: "{{$randPhrase()}}"
                    column17: "{{$randPhrase()}}"
                    column18: "{{$randPhrase()}}"
                    column19: ["L", "{{$randAlpha()}}", "{{$randAlpha()}}", "{{$randAlpha()}}"]
            expect:
              - statusCode: 200
        - think: 15
        count: 30
  - name: "Scenario 3: Update many rows"
    engine: http
    flow:
      - loop:
        - post:
            url: "/api/docs/{{scenario3DocId}}/apply"
            beforeRequest: "scenario3ForgeBody"
            expect:
              - statusCode: 200
        - think: 15
        count: 30
  - name: "Scenario 5: Update many rows with aggregation table"
    engine: http
    flow:
      - loop:
        - post:
            url: "/api/docs/{{scenario5DocId}}/apply"
            beforeRequest: "scenario3ForgeBody" # Use same body as for scenario 3
            expect:
              - statusCode: 200
        - think: 15
        count: 30

  - name: "Scenario 8: fetch table records"
    engine: http
    flow:
      - get:
          url: "/api/docs/{{scenario3DocId}}/tables/Table1/records"
          expect:
            - statusCode: 200

    # - name: "Scenario 8: Fetch a big table"
    #   engine: http
    #   flow:
